{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/samuelklepper/Projects/comp-blog/frontend/src/components/create/PostForm.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass PostForm extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      /*\n            Because we named the inputs to match their\n            corresponding values in state, it's\n            super easy to update the state\n          */\n      this.setState({\n        [e.target.title]: e.target.value,\n        [e.target.body]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault(); // get our form data out of state\n\n      const {\n        title,\n        body\n      } = this.state;\n      axios.post('/api/v1/posts', {\n        title,\n        body\n      }).then(result => {\n        console.log();\n      });\n    };\n\n    this.state = {\n      title: '',\n      body: ''\n    };\n  }\n\n  render() {\n    const {\n      title,\n      body\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: title,\n        onChange: this.onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"body\",\n        value: body,\n        onChange: this.onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/samuelklepper/Projects/comp-blog/frontend/src/components/create/PostForm.js"],"names":["React","Component","axios","PostForm","constructor","onChange","e","setState","target","title","value","body","onSubmit","preventDefault","state","post","then","result","console","log","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC/BG,EAAAA,WAAW,GAAG;AACZ;;AADY,SAQdC,QARc,GAQFC,CAAD,IAAO;AAChB;AACJ;AACA;AACA;AACA;AACI,WAAKC,QAAL,CAAc;AACZ,SAACD,CAAC,CAACE,MAAF,CAASC,KAAV,GAAkBH,CAAC,CAACE,MAAF,CAASE,KADf;AAEZ,SAACJ,CAAC,CAACE,MAAF,CAASG,IAAV,GAAiBL,CAAC,CAACE,MAAF,CAASE;AAFd,OAAd;AAID,KAlBa;;AAAA,SAoBdE,QApBc,GAoBFN,CAAD,IAAO;AAChBA,MAAAA,CAAC,CAACO,cAAF,GADgB,CAEhB;;AACA,YAAM;AAAEJ,QAAAA,KAAF;AAASE,QAAAA;AAAT,UAAkB,KAAKG,KAA7B;AAEAZ,MAAAA,KAAK,CAACa,IAAN,CAAW,eAAX,EAA4B;AAAEN,QAAAA,KAAF;AAASE,QAAAA;AAAT,OAA5B,EAA6CK,IAA7C,CAAmDC,MAAD,IAAY;AAC5DC,QAAAA,OAAO,CAACC,GAAR;AACD,OAFD;AAGD,KA5Ba;;AAEZ,SAAKL,KAAL,GAAa;AACXL,MAAAA,KAAK,EAAE,EADI;AAEXE,MAAAA,IAAI,EAAE;AAFK,KAAb;AAID;;AAwBDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA,KAAF;AAASE,MAAAA;AAAT,QAAkB,KAAKG,KAA7B;AACA,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKF,QAArB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,KAAK,EAAEH,KAHT;AAIE,QAAA,QAAQ,EAAE,KAAKJ;AAJjB;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,KAAK,EAAEM,IAAtC;AAA4C,QAAA,QAAQ,EAAE,KAAKN;AAA3D;AAAA;AAAA;AAAA;AAAA,cAPF,eASE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AA9C8B;;AAiDjC,eAAeF,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\n\nclass PostForm extends Component {\n  constructor() {\n    super()\n    this.state = {\n      title: '',\n      body: '',\n    }\n  }\n\n  onChange = (e) => {\n    /*\n          Because we named the inputs to match their\n          corresponding values in state, it's\n          super easy to update the state\n        */\n    this.setState({\n      [e.target.title]: e.target.value,\n      [e.target.body]: e.target.value,\n    })\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault()\n    // get our form data out of state\n    const { title, body } = this.state\n\n    axios.post('/api/v1/posts', { title, body }).then((result) => {\n      console.log()\n    })\n  }\n\n  render() {\n    const { title, body } = this.state\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          type='text'\n          name='title'\n          value={title}\n          onChange={this.onChange}\n        />\n        <input type='text' name='body' value={body} onChange={this.onChange} />\n\n        <button type='submit'>Submit</button>\n      </form>\n    )\n  }\n}\n\nexport default PostForm\n"]},"metadata":{},"sourceType":"module"}